plugins {
    id 'net.kyori.blossom' version '1.3.0'
    id 'net.minecraftforge.gradle' version '6.+'
    id 'com.github.johnrengelman.shadow' version '8.1.+'
    id 'wtf.gofancy.fancygradle' version '1.1.+'
    id 'java'
}

fancyGradle {
    patches {
        resources
        coremods
        asm
        mergetool
    }
}

minecraft {
    mappings channel: 'stable', version: '39-1.12'

    accessTransformer(file("src/main/resources/META-INF/accesstransformer.cfg"))
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

configurations {
    shade
    implementation.extendsFrom shade
}

configurations.all {
    resolutionStrategy {
        force 'org.lwjgl.lwjgl:lwjgl-platform:2.9.4-nightly-20150209'
    }
}

dependencies {
    minecraft 'net.minecraftforge:forge:1.12.2-14.23.5.2860'
    shade project(':spark-common')
}

shadowJar {
    archiveFileName = "spark-unforged-${project.pluginVersion}-forge.jar"
    configurations = [project.configurations.shade]

    relocate 'okio', 'me.lucko.spark.lib.okio'
    relocate 'okhttp3', 'me.lucko.spark.lib.okhttp3'
    relocate 'org.tukaani.xz', 'me.lucko.spark.lib.xz'

    relocate 'net.kyori.adventure', 'me.lucko.spark.lib.adventure'
    relocate 'net.kyori.examination', 'me.lucko.spark.lib.adventure.examination'
    relocate 'net.bytebuddy', 'me.lucko.spark.lib.bytebuddy'
    relocate 'com.google.protobuf', 'me.lucko.spark.lib.protobuf'
    relocate 'org.objectweb.asm', 'me.lucko.spark.lib.asm'
    relocate 'one.profiler', 'me.lucko.spark.lib.asyncprofiler'

    //relocate 'me.lucko.bytesocks.client', 'me.lucko.spark.lib.bytesocks'

    exclude 'module-info.class'
    exclude 'META-INF/maven/**'
    exclude 'META-INF/proguard/**'
    exclude 'META-INF/versions/**'
}

reobf {
    shadowJar {
        dependsOn createMcpToSrg
        mappings = createMcpToSrg.outputs.files.singleFile
    }
}

processResources {
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
        expand (
                'pluginVersion': project.pluginVersion,
                'pluginDescription': project.pluginDescription
        )
    }
}


jar {
    manifest {
        attributes([
                "Implementation-Title": project.name,
                "Implementation-Version": project.version,
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
                'FMLAT': 'accesstransformer.cfg'
        ])
    }
}

blossom {
    replaceTokenIn('src/main/java/me/lucko/spark/forge/ForgeSparkMod.java')
    replaceToken '@version@', project.pluginVersion
}

artifacts {
    archives shadowJar
    shadow shadowJar
}

reobf {
    shadowJar {
        dependsOn createMcpToSrg
        mappings = createMcpToSrg.outputs.files.singleFile
    }
}